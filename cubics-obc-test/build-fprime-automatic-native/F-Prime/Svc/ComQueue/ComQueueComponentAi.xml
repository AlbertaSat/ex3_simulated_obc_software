<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
ComQueueComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="Svc" name="ComQueue" kind="active">

  <comment>
  Component used to queue buffer types
  </comment>

  <import_array_type>Svc/ComQueue/BuffQueueDepthArrayAi.xml</import_array_type>
  <import_array_type>Svc/ComQueue/ComQueueDepthArrayAi.xml</import_array_type>
  <import_enum_type>Svc/ComQueue/QueueTypeEnumAi.xml</import_enum_type>
  <import_port_type>Fw/Buffer/BufferSendPortAi.xml</import_port_type>
  <import_port_type>Fw/Com/ComPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogPortAi.xml</import_port_type>
  <import_port_type>Fw/Log/LogTextPortAi.xml</import_port_type>
  <import_port_type>Fw/Ports/SuccessCondition/SuccessConditionPortAi.xml</import_port_type>
  <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
  <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
  <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>

  <ports>
    <port name="Log" data_type="Fw::Log" kind="output" role="LogEvent" max_number="1">
      <comment>
      Port for emitting events
      </comment>
    </port>
    <port name="LogText" data_type="Fw::LogText" kind="output" role="LogTextEvent" max_number="1">
      <comment>
      Port for emitting text events
      </comment>
    </port>
    <port name="Time" data_type="Fw::Time" kind="output" role="TimeGet" max_number="1">
      <comment>
      Port for getting the time
      </comment>
    </port>
    <port name="Tlm" data_type="Fw::Tlm" kind="output" role="Telemetry" max_number="1">
      <comment>
      Port for emitting telemetry
      </comment>
    </port>
    <port name="buffQueueIn" data_type="Fw::BufferSend" kind="async_input" max_number="1" full="drop">
      <comment>
      Port array for receiving Fw::Buffers
      </comment>
    </port>
    <port name="buffQueueSend" data_type="Fw::BufferSend" kind="output" max_number="1">
      <comment>
      Fw::Buffer output port
      </comment>
    </port>
    <port name="comQueueIn" data_type="Fw::Com" kind="async_input" max_number="2" full="drop">
      <comment>
      Port array for receiving Fw::ComBuffers
      </comment>
    </port>
    <port name="comQueueSend" data_type="Fw::Com" kind="output" max_number="1">
      <comment>
      Fw::ComBuffer output port
      </comment>
    </port>
    <port name="comStatusIn" data_type="Fw::SuccessCondition" kind="async_input" max_number="1" full="assert">
      <comment>
      Port for receiving the status signal
      </comment>
    </port>
    <port name="run" data_type="Svc::Sched" kind="async_input" max_number="1" full="drop">
      <comment>
      Port for scheduling telemetry output
      </comment>
    </port>
  </ports>

  <events>
    <event id="0x0" name="QueueOverflow" severity="WARNING_HI" format_string="The %s queue at index %u overflowed">
      <comment>
      Queue overflow event
      </comment>
      <args>
        <arg name="queueType" type="Svc::QueueType">
          <comment>
          The Queue data type
          </comment>
        </arg>
        <arg name="index" type="U32">
          <comment>
          index of overflowed queue
          </comment>
        </arg>
      </args>
    </event>
  </events>

  <telemetry>
    <channel id="0x0" name="comQueueDepth" data_type="Svc::ComQueueDepth" update="always">
      <comment>
      Depth of queues of Fw::ComBuffer type
      </comment>
    </channel>
    <channel id="0x1" name="buffQueueDepth" data_type="Svc::BuffQueueDepth" update="always">
      <comment>
      Depth of queues of Fw::Buffer type
      </comment>
    </channel>
  </telemetry>

</component>
