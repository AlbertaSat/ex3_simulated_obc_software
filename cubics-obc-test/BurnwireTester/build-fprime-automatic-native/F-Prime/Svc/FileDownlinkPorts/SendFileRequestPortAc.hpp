// ======================================================================
// \title  SendFileRequestPortAc.hpp
// \author Generated by fpp-to-cpp
// \brief  hpp file for SendFileRequest port
// ======================================================================

#ifndef Svc_SendFileRequestPortAc_HPP
#define Svc_SendFileRequestPortAc_HPP

#include <cstdio>
#include <cstring>

#include "FpConfig.hpp"
#include "Fw/Comp/PassiveComponentBase.hpp"
#include "Fw/Port/InputPortBase.hpp"
#include "Fw/Port/OutputPortBase.hpp"
#include "Fw/Types/StringType.hpp"
#include "Svc/FileDownlinkPorts/SendFileResponseSerializableAc.hpp"

namespace Svc {

  namespace SendFileRequestPortStrings {

    // ----------------------------------------------------------------------
    // StringSize100 class
    // ----------------------------------------------------------------------

    class StringSize100 :
      public Fw::StringBase
    {

      public:

        enum {
          //! The size of the string length plus the size of the string buffer
          SERIALIZED_SIZE = sizeof(FwBuffSizeType) + 100
        };

        //! Default constructor
        StringSize100();

        //! Char array constructor
        StringSize100(const char* src);

        //! String base constructor
        StringSize100(const Fw::StringBase& src);

        //! Copy constructor
        StringSize100(const StringSize100& src);

        //! Destructor
        ~StringSize100();

        //! Copy assignment operator
        StringSize100& operator=(const StringSize100& other);

        //! String base assignment operator
        StringSize100& operator=(const Fw::StringBase& other);

        //! char* assignment operator
        StringSize100& operator=(const char* other);

        //! Retrieves char buffer of string
        const char* toChar() const;

        NATIVE_UINT_TYPE getCapacity() const;

      private:

        char m_buf[100]; //!< Buffer for string storage

    };

  }

  // ----------------------------------------------------------------------
  // String types for backwards compatibility
  // ----------------------------------------------------------------------

  typedef SendFileRequestPortStrings::StringSize100 sourceFileNameString;
  typedef SendFileRequestPortStrings::StringSize100 destFileNameString;

  //! Input SendFileRequest port
  //! Request that FileDownlink downlink a file
  class InputSendFileRequestPort :
    public Fw::InputPortBase
  {

    public:

      // ----------------------------------------------------------------------
      // Constants
      // ----------------------------------------------------------------------

      enum {
        //! The size of the serial representations of the port arguments
        SERIALIZED_SIZE =
          SendFileRequestPortStrings::StringSize100::SERIALIZED_SIZE +
          SendFileRequestPortStrings::StringSize100::SERIALIZED_SIZE +
          sizeof(U32) +
          sizeof(U32)
      };

    public:

      // ----------------------------------------------------------------------
      // Types
      // ----------------------------------------------------------------------

      //! The port callback function type
      typedef Svc::SendFileResponse (*CompFuncPtr)(
        Fw::PassiveComponentBase* callComp,
        NATIVE_INT_TYPE portNum,
        const SendFileRequestPortStrings::StringSize100& sourceFileName,
        const SendFileRequestPortStrings::StringSize100& destFileName,
        U32 offset,
        U32 length
      );

    public:

      // ----------------------------------------------------------------------
      // Input Port Member functions
      // ----------------------------------------------------------------------

      //! Constructor
      InputSendFileRequestPort();

      //! Initialization function
      void init();

      //! Register a component
      void addCallComp(
          Fw::PassiveComponentBase* callComp, //!< The containing component
          CompFuncPtr funcPtr //!< The port callback function
      );

      //! Invoke a port interface
      Svc::SendFileResponse invoke(
          const SendFileRequestPortStrings::StringSize100& sourceFileName, //!< Path of file to downlink
          const SendFileRequestPortStrings::StringSize100& destFileName, //!< Path to store downlinked file at
          U32 offset, //!< Amount of data in bytes to downlink from file. 0 to read until end of file
          U32 length //!< Amount of data in bytes to downlink from file. 0 to read until end of file
      );

    private:

#if FW_PORT_SERIALIZATION == 1

      //! Invoke the port with serialized arguments
      Fw::SerializeStatus invokeSerial(Fw::SerializeBufferBase& _buffer);

#endif

    private:

      // ----------------------------------------------------------------------
      // Member variables
      // ----------------------------------------------------------------------

      //! The pointer to the port callback function
      CompFuncPtr m_func;

  };

  //! Output SendFileRequest port
  //! Request that FileDownlink downlink a file
  class OutputSendFileRequestPort :
    public Fw::OutputPortBase
  {

    public:

      // ----------------------------------------------------------------------
      // Output Port Member functions
      // ----------------------------------------------------------------------

      //! Constructor
      OutputSendFileRequestPort();

      //! Initialization function
      void init();

      //! Register an input port
      void addCallPort(
          InputSendFileRequestPort* callPort //!< The input port
      );

      //! Invoke a port interface
      Svc::SendFileResponse invoke(
          const SendFileRequestPortStrings::StringSize100& sourceFileName, //!< Path of file to downlink
          const SendFileRequestPortStrings::StringSize100& destFileName, //!< Path to store downlinked file at
          U32 offset, //!< Amount of data in bytes to downlink from file. 0 to read until end of file
          U32 length //!< Amount of data in bytes to downlink from file. 0 to read until end of file
      );

    private:

      // ----------------------------------------------------------------------
      // Member variables
      // ----------------------------------------------------------------------

      //! The pointer to the input port
      InputSendFileRequestPort* m_port;

  };

}

#endif
