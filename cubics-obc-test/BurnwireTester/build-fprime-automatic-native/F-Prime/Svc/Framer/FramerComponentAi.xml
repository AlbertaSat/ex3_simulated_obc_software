<?xml version="1.0" encoding="UTF-8"?>

<!-- =====================================================================
FramerComponentAi.xml
Generated by fpp-to-xml
====================================================================== -->
<component namespace="Svc" name="Framer" kind="passive">

  <comment>
  A component for framing input for transmission to the ground
  </comment>

  <import_port_type>Drv/ByteStreamDriverModel/ByteStreamSendPortAi.xml</import_port_type>
  <import_port_type>Fw/Buffer/BufferGetPortAi.xml</import_port_type>
  <import_port_type>Fw/Buffer/BufferSendPortAi.xml</import_port_type>
  <import_port_type>Fw/Com/ComPortAi.xml</import_port_type>
  <import_port_type>Fw/Ports/SuccessCondition/SuccessConditionPortAi.xml</import_port_type>

  <ports>
    <port name="bufferDeallocate" data_type="Fw::BufferSend" kind="output" max_number="1">
      <comment>
      Port for deallocating buffers received on bufferIn, after
      copying packet data to the frame buffer
      </comment>
    </port>
    <port name="bufferIn" data_type="Fw::BufferSend" kind="guarded_input" max_number="1">
      <comment>
      Port for receiving file packets stored in dynamically-sized
      Fw::Buffer objects
      </comment>
    </port>
    <port name="comIn" data_type="Fw::Com" kind="guarded_input" max_number="1">
      <comment>
      Port for receiving data packets of any type stored in statically-sized
      Fw::Com buffers
      </comment>
    </port>
    <port name="comStatusIn" data_type="Fw::SuccessCondition" kind="guarded_input" max_number="1">
      <comment>
      Port receiving the general status from the downstream component
      indicating it is ready or not-ready for more input
      </comment>
    </port>
    <port name="comStatusOut" data_type="Fw::SuccessCondition" kind="output" max_number="1">
      <comment>
      Port receiving indicating the status of framer for receiving more data
      </comment>
    </port>
    <port name="framedAllocate" data_type="Fw::BufferGet" kind="output" max_number="1">
      <comment>
      Port for allocating buffers to hold framed data
      </comment>
    </port>
    <port name="framedOut" data_type="Drv::ByteStreamSend" kind="output" max_number="1">
      <comment>
      Port for sending buffers containing framed data. Ownership of the
      buffer passes to the receiver.
      </comment>
    </port>
  </ports>

</component>
